{"version":3,"sources":["redux/reducers/homeReducer.ts","redux/Actiontypes.ts","redux/reducers/index.ts","utils/Datafactory.js","utils/Utilmethod.js","components/Navbar.tsx","redux/actions/homeAction.ts","utils/Url.js","pages/home/home.tsx","pages/organization/orgmanage.tsx","components/Layout.tsx","pages/home/login.tsx","pages/entrance/index.tsx","routerconfig/Router.tsx"],"names":["initialState","userId","userName","menuList","secondmenuVisible","secondmenuList","currentMenu","homeReducer","state","arguments","length","undefined","action","type","Object","objectSpread","menus","filterid","smlist","filter","d","name","secondMenuvisible","toConsumableArray","children","combineReducers","homeState","Datafactory","cb","timeout","setTimeout","_products","HR_AXIOS","axios","create","withCredentials","Http","url","params","post","then","res","data","catch","error","request","status","responseURL","indexOf","Result","Data","Navbarcomp","props","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getMenulistByuser","menuname","changeSecondmenu","clickSecondmenu","_this","menulist","map","index","iconre","react_default","a","createElement","className","aria-hidden","xlinkHref","key","id","onClick","firstMenuhoverin","_this2","_this$props","smenuvisible","smenulist","secondMenustyle","display","href","icon_default","style","fontSize","paddingLeft","onMouseLeave","firstMenuhoverout","CreateMenulist","md","react_router_dom","to","breadcrumb_default","Item","React","Component","connect","dispatch","ret","datafactory","visible","smid","smname","Homecomp","currentmenu","Orgcomp","Layoutcomp","Navbar","react_router","exact","path","component","Home","Organization","Login","un","pw","focus","event","keyCode","history","push","ref","input","spellCheck","placeholder","onKeyUp","e","enterKeyupLoginIn","onClickloginIn","middleware","thunk","store","createStore","reducer","applyMiddleware","apply","ReactDOM","render","es","Layout","document","getElementById"],"mappings":"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","file":"static/js/main.0d866e54.chunk.js","sourcesContent":["import * as Actiontype from 'redux/Actiontypes';\r\n\r\nexport interface homeState{\r\n  userId: string,\r\n  userName: string,\r\n  menuList: Array<any>,\r\n  secondmenuVisible: boolean,\r\n  secondmenuList: Array<any>,\r\n  currentMenu: string\r\n}\r\n\r\nconst initialState:homeState={\r\n  userId: '',\r\n  userName: '',\r\n  menuList: [],\r\n  secondmenuVisible: false,\r\n  secondmenuList: [],\r\n  currentMenu: ''\r\n}\r\n\r\nconst homeReducer=(state:homeState=initialState, action: any)=>{\r\n  switch(action.type){\r\n    case Actiontype.LOGIN_IN:\r\n      return {...state};\r\n    case Actiontype.TYPE_Getmenulist:{\r\n      return {...state, menuList: action.menus};\r\n    }\r\n    case Actiontype.ChangeSecondmenu:{\r\n      if(action.filterid){\r\n        let smlist:any = state.menuList.filter((d)=>d.name===action.filterid);\r\n        if(smlist&&smlist.length>0){\r\n          return {\r\n            ...state,\r\n            secondmenuVisible: action.secondMenuvisible,\r\n            secondmenuList: [...smlist[0].children||[]]\r\n          };\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        secondmenuVisible: action.secondMenuvisible,\r\n        secondmenuList: []\r\n      };\r\n    }\r\n    case Actiontype.ClickSecondmenu:{\r\n      if(action.currentMenu){\r\n        return {...state, currentMenu: action.currentMenu};\r\n      }\r\n      return { ...state };\r\n    }\r\n    default: {\r\n      return {...state};\r\n    }\r\n  }\r\n}\r\n\r\nexport default homeReducer;","export const LOGIN_IN = 'LOGIN_IN';\r\nexport const TYPE_Getmenulist = 'type_getMenulist';\r\nexport const ChangeSecondmenu = 'type_changeSecondMenu';\r\nexport const ClickSecondmenu = 'type_clickSecondMenu';","import {combineReducers} from 'redux';\r\nimport homeState from 'redux/reducers/homeReducer';\r\n\r\nexport default combineReducers({homeState});","import _products from 'assets/data/menu.json';\r\nconst TIMEOUT = 100\r\n\r\nexport default {\r\n  getMenus: (cb, timeout) => setTimeout(() => cb(_products), timeout || TIMEOUT)\r\n}\r\n","import axios from 'axios';\r\n\r\n// 全局api定义\r\nexport let BaseUrl = (function(){\r\n  if(process.env.NODE_ENV === 'development'){\r\n    return '/api';\r\n  }\r\n  return '';\r\n})();\r\n\r\n// 封装Http axios请求\r\nconst HR_AXIOS = axios.create({\r\n  timeout: 6000,\r\n  withCredentials: true\r\n});\r\nexport const Http={\r\n  post: (url, params={})=>{\r\n    return HR_AXIOS.post(url, params)\r\n      .then((res)=>res.data)\r\n      .catch(function(error){\r\n        if(error.request){\r\n          if(error.request.status==404){\r\n            let respUrl=error.request.responseURL;\r\n            let idx=respUrl.indexOf('/Account/Login')\r\n            if(idx>0){\r\n              // let hostUrl=respUrl.substring(0, idx);\r\n              // location.href=hostUrl+'/#/';\r\n              // return false;\r\n            }\r\n            return {Result: 'error', Data: '请求地址错误'}\r\n          }\r\n          return {Result: 'error', Data: '其他错误'};\r\n        }\r\n      });\r\n    },\r\n  get: null\r\n}","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {Icon, Breadcrumb} from 'antd';\r\nimport {\r\n  getMenulistByuser,\r\n  changeSecondmenu,\r\n  clickSecondmenu\r\n} from 'redux/actions/homeAction';\r\nimport 'assets/css/home.scss';\r\n\r\ninterface IProps{\r\n  menulist:Array<any>;\r\n  smenuvisible:boolean;\r\n  smenulist:Array<any>;\r\n  getMenulistByuser?:any;\r\n  changeSecondmenu:Function;\r\n  clickSecondmenu:Function;\r\n}\r\n\r\n// state不能null\r\nclass Navbarcomp extends React.Component<IProps, any>{\r\n  constructor(props:Readonly<IProps>){\r\n    super(props);\r\n  }\r\n  componentDidMount(){\r\n    this.props.getMenulistByuser();\r\n  }\r\n  firstMenuhoverin(menuname:string){\r\n    //console.log(menuname);\r\n    this.props.changeSecondmenu(true, menuname);\r\n  }\r\n  firstMenuhoverout(){\r\n    this.props.changeSecondmenu(false);\r\n  }\r\n  secondMenuclick(menuname: string){\r\n    this.props.clickSecondmenu(menuname);\r\n  }\r\n  CreateMenulist(){\r\n    const {menulist}=this.props;\r\n    // const getSecondMenus = (menus:any)=>{\r\n    //   if(menus&&menus instanceof Array){\r\n    //     return menus.map((m)=><dd key={m.name}>{m.name}</dd>);\r\n    //   }else\r\n    //     return null;\r\n    // }\r\n    return menulist.map((data, index)=>{\r\n      let iconre=null;\r\n      if(index===0){\r\n        iconre = (\r\n          <svg className=\"icon\" aria-hidden=\"true\">\r\n            <use xlinkHref=\"#icon-zuzhiguanli\"></use>\r\n          </svg>\r\n        );\r\n      }\r\n      return (\r\n        <li\r\n            className=\"menu-item\"\r\n            key={data.id}\r\n            onClick={()=>this.firstMenuhoverin(data.name)}\r\n        >\r\n          <a>{iconre}{data.name}</a>\r\n          {/* <div className=\"menu-item_in\">\r\n            <div className=\"menu-content-group\">\r\n              <dl>{getSecondMenus(data.children)}</dl>\r\n            </div>\r\n          </div> */}\r\n        </li>\r\n      );\r\n    })\r\n  }\r\n  render(){\r\n    const {smenuvisible, smenulist} = this.props;\r\n    const secondMenustyle = {display: smenuvisible?'block':'none'};\r\n    return (\r\n      <div>\r\n        <header className=\"hr-header\">\r\n          <a href=\"/\" className=\"hr-navbar-brand\">人力资源办公系统</a>\r\n          <div className=\"hr-navbar-content\">\r\n            <div></div>\r\n            <ul className=\"hr-navbar-group\">\r\n              <li className=\"hr-navbar-item\">\r\n                <span id=\"idspan_user\">陈超凡</span>\r\n                <Icon type=\"mail\" style={{fontSize: 14, paddingLeft: 5}} />\r\n              </li>\r\n              <li className=\"hr-navbar-item\"><a>退出</a></li>\r\n            </ul>\r\n          </div>\r\n        </header>\r\n        <div className=\"hr-menu\" onMouseLeave={()=>this.firstMenuhoverout()}>\r\n          <nav>\r\n            <ul className=\"menu-group clear\">{this.CreateMenulist()}</ul>\r\n          </nav>\r\n          <div className=\"menu-content\" style={secondMenustyle}>\r\n            <div className=\"menu-content-group\">\r\n              <dl>\r\n                {smenulist.map((md)=>(\r\n                  <dd key={md.name}>\r\n                    <Link to=\"./organization\">{md.name}</Link>\r\n                  </dd>\r\n                ))}\r\n              </dl>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div style={{paddingLeft: '0.16rem'}}>\r\n          <Breadcrumb>\r\n            <Breadcrumb.Item><a href=\"\">首页</a></Breadcrumb.Item>\r\n            <Breadcrumb.Item>\r\n              <a href=\"\">Application Center</a>\r\n            </Breadcrumb.Item>\r\n            <Breadcrumb.Item>\r\n              <a href=\"\">Application List</a>\r\n            </Breadcrumb.Item>\r\n            <Breadcrumb.Item>An Application</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps=(state: any) => {\r\n  const {homeState} = state;\r\n  return {\r\n    menulist: homeState.menuList,\r\n    smenuvisible: homeState.secondmenuVisible,\r\n    smenulist: homeState.secondmenuList\r\n  };\r\n}\r\nexport default connect(\r\n  mapStateToProps,\r\n  {getMenulistByuser, changeSecondmenu, clickSecondmenu}\r\n)(Navbarcomp);\r\n","import * as Actiontype from 'redux/Actiontypes';\r\nimport datafactory from 'utils/Datafactory';\r\nimport * as Url from 'utils/Url';\r\nimport {Http} from 'utils/Utilmethod';\r\n\r\n// 测试方法\r\nexport const getMenulistcs=(menuList:any)=>({\r\n  type: Actiontype.LOGIN_IN,\r\n  menuList\r\n});\r\n\r\n// export const action_Getmenulist=()=>({\r\n//   type: 'type_getMenuList'\r\n// });\r\n// const getMenulist = function(){\r\n//   return function(dispatch: any, getState: any){\r\n//     console.log(getState());\r\n//     dispatch(action_Getmenulist);\r\n//   }\r\n// }\r\n// redux-thunk的异步action写法\r\nexport const getMenulistByuser = () => (dispatch:any) => {\r\n  Http.post(Url.getMenu).then((ret:any)=>{\r\n    if(ret.Result&&ret.Result==='error'){\r\n      datafactory.getMenus((menus: any)=>{\r\n        dispatch({\r\n          type: Actiontype.TYPE_Getmenulist,\r\n          menus: menus\r\n        });\r\n      })\r\n      return;\r\n    }\r\n    dispatch({\r\n      type: Actiontype.TYPE_Getmenulist,\r\n      menus: ret\r\n    });\r\n  })\r\n};\r\n\r\nexport const changeSecondmenu=(visible:boolean,　smid:string)=>{\r\n  return {\r\n    type: Actiontype.ChangeSecondmenu,\r\n    secondMenuvisible: visible,\r\n    filterid: smid\r\n  }\r\n};\r\n\r\nexport const clickSecondmenu=(smname:string)=>{\r\n  return {\r\n    type: Actiontype.ClickSecondmenu,\r\n    currentMenu: smname\r\n  }\r\n};","import {BaseUrl} from './Utilmethod';\r\n\r\nexport const LogininURL=BaseUrl+'/';\r\nexport const getMenu = BaseUrl+'/Home/Menu';","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n// import Layout from 'components/Layout';\r\n\r\nimport 'assets/css/home.scss';\r\n\r\ninterface IProps{\r\n  // currentmenu:string;\r\n}\r\ninterface IState{}\r\n\r\nclass Homecomp extends React.Component<IProps, IState>{\r\n  constructor(props:Readonly<IProps>){\r\n    super(props);\r\n  }\r\n  render(){\r\n    return (\r\n      <div>首页，这个是网站的首页，包含一些通知信息</div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps=(state: any) => {\r\n  const {homeState} = state;\r\n  return {currentmenu: homeState.currentMenu};\r\n}\r\nexport default connect(mapStateToProps)(Homecomp);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n// import Layout from 'components/Layout';\r\n\r\nimport 'assets/css/home.scss';\r\n\r\ninterface IProps{\r\n  currentmenu:string,\r\n}\r\ninterface IState{}\r\n\r\nclass Orgcomp extends React.Component<IProps, IState>{\r\n  constructor(props:Readonly<IProps>){\r\n    super(props);\r\n  }\r\n  render(){\r\n    return (\r\n      <div>组织管理页，包含相关组织信息</div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps=(state: any) => {\r\n  const {homeState} = state;\r\n  return {currentmenu: homeState.currentMenu};\r\n}\r\nexport default connect(mapStateToProps)(Orgcomp);","import React from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport Navbar from 'components/Navbar';\r\n\r\nimport Home from 'pages/home/home';\r\nimport Organization from 'pages/organization/orgmanage';\r\n\r\ninterface IProps{\r\n  // children?: ReactElement|Array<ReactElement>;\r\n}\r\nexport default class Layoutcomp extends React.Component<IProps, {}>{\r\n  constructor(props:Readonly<IProps>){\r\n    super(props);\r\n  }\r\n  componentDidMount(){ }\r\n  render(){\r\n    return (\r\n      <div>\r\n        <Navbar></Navbar>\r\n        <section>\r\n          <Route exact path=\"/home\" component={Home} />\r\n          <Route exact path=\"/organization\" component={Organization} />\r\n          <Route exact path=\"/\" component={Home} />\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {Icon} from 'antd';\r\n\r\nimport 'assets/css/home.scss';\r\nimport {Http} from 'utils/Utilmethod';\r\nimport * as URL from 'utils/Url';\r\n\r\ninterface IProps {\r\n  history: any\r\n}\r\n\r\n// 'loginProps' describes the shape of props.\r\n// State is never set so we use the '{}' type.\r\nclass Login extends React.Component<IProps, {}>{\r\n  constructor(props: IProps){\r\n    super(props);\r\n  }\r\n  componentDidMount(){\r\n    this.un.focus();\r\n  }\r\n  un: any;\r\n  pw: any;\r\n  // 登录按钮事件\r\n  onClickloginIn():void{\r\n    // console.log(this.un.value, this.pw.value);\r\n    Http.post(URL.LogininURL, {});\r\n  }\r\n  // 键盘enter事件\r\n  enterKeyupLoginIn(event?: React.KeyboardEvent<HTMLInputElement>){\r\n    if(event&&event.keyCode===13){\r\n      this.props.history.push('/home');\r\n    }\r\n  }\r\n  render(){\r\n    return (\r\n      <div>\r\n        <div className=\"login-background\">\r\n        </div>\r\n        <div className=\"login-content\">\r\n          <div className=\"header\">\r\n          </div>\r\n          <div className=\"outer\">\r\n            <div className=\"middle\">\r\n              <div className=\"inner-content\">\r\n                <span className=\"title\">登录</span>\r\n                <div className=\"row\">\r\n                  <div className=\"input-addon\">\r\n                    <Icon type=\"user\" style={{fontSize: 16}}/>\r\n                  </div>\r\n                  <input type=\"text\"\r\n                      ref={(input)=>this.un=input}\r\n                      spellCheck={false}\r\n                      placeholder=\"请输入登录名\"\r\n                      onKeyUp={(e)=>this.enterKeyupLoginIn(e)}\r\n                  />\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"input-addon\">\r\n                    <Icon type=\"lock\" style={{fontSize: 16}}/>\r\n                  </div>\r\n                  <input type=\"password\"\r\n                      ref={(input)=>this.pw=input}\r\n                      onKeyUp={(e)=>this.enterKeyupLoginIn(e)}\r\n                  />\r\n                </div>\r\n                <div className=\"row\">\r\n                  <a id=\"ida_register\" href=\"#\">注册</a>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <button onClick={()=>this.onClickloginIn()}>登陆</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\n// import * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware} from 'redux';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\n\nimport reducer from 'redux/reducers';\nimport Router from 'routerconfig/Router';\n\nconst middleware:Array<any> = [thunk];\n//当配置环境为非生产环境时，加入logger\nif (process.env.NODE_ENV !== 'production') {\n  middleware.push(createLogger());\n}\n\nconst store=createStore(\n  reducer,\n  applyMiddleware(...middleware)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n","import React from 'react';\r\nimport {BrowserRouter as Brouter, Switch, Route} from 'react-router-dom';\r\n\r\nimport Layout from 'components/Layout';\r\nimport Login from 'pages/home/login';\r\n// import Home from 'pages/home/home';\r\n// import Organization from 'pages/organization/orgmanage';\r\n\r\nexport default ()=>{\r\n  return (\r\n    <Brouter>\r\n      {/* <Switch>\r\n        <Route exact path=\"/login\" component={Login} />\r\n        <Route exact path=\"/home\" component={Home} />\r\n        <Route exact path=\"/layout\" component={Layout} />\r\n        <Route exact path=\"/organization\" component={Organization} />\r\n        <Route exact path=\"/\" component={Home} />\r\n      </Switch> */}\r\n      <Switch>\r\n        <Route exact path=\"/login\" component={Login} />\r\n        <Route path=\"/\" component={Layout} />\r\n      </Switch>\r\n    </Brouter>\r\n  );\r\n}"],"sourceRoot":""}